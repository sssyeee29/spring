package org.zerock.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.zerock.dto.BoardVO;
import org.zerock.repository.BoardRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class BoardService {
	
//	@Autowired // 필드 주입 - 요즘은 잘 안쓰고 생성자 주입으로 씀
//	private BoardRepository boardRepository;
	
	//생성자 주입 
	private final BoardRepository boardRepository; //@RequiredArgsConstructor 이걸씀 
	
	//전체데이터 가져오기 
	public List<BoardVO> selectListBoards() {
	
		return boardRepository.selectAllBoards();
	}
	
	//단건데이터 조회
	public BoardVO selectOneByNum(int num) {
		
		return boardRepository.selectOneByNum(num);
	}
	
	//데이터 추가
	public void insertBoard(BoardVO vo) {
		 boardRepository.insertBoard(vo); //void라서 return을 안함 
	}
	
	//데이터 변경 
	public void updateBoard(BoardVO vo) {
		boardRepository.updateBoard(vo);
	}
	
	//데이터 삭제 
	public void deleteBoard(int num) {
		boardRepository.deleteBoard(num);
		
	}
	
	//조회수 증가
	public void updateReadCount(int num) {
		boardRepository.updateReadBCount(num);
		
	}
	
	//비밀번호 맞는지 확인하기 => 유지보수와 확장성에 좋음 (service에서 하게되면)
	public boolean checkPassword(int num, String pass) {
		//DB에 저장되어있는 전체데이터를 가지고 있는 vo 
		BoardVO vo = boardRepository.selectOneByNum(num);
		
		//입력받은 비밀번호와 DB저장된 비밀번호가 다른가?
		if(vo.getPass().equals(pass)) {
			boardRepository.deleteBoard(num); //삭제 실행 
			return true;
		}else{
			return false;
		}
	}
}
