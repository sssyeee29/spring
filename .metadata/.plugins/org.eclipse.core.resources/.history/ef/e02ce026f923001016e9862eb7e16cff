package org.zerock.repository;

import static org.junit.Assert.*;

import java.util.List;

import javax.sql.DataSource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.zerock.dto.BoardVO;

import lombok.extern.log4j.Log4j;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({ //servlet-context.xml에서 객체를 생성하고있고, db연결은 root-context.xml에서 하고있으니.. 두개 다
	"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml",
	"file:src/main/webapp/WEB-INF/spring/root-context.xml"})
@Log4j
public class BoardRepositoryTests {

	@Autowired
	private BoardRepository boardRepository;
	
	@Test
	public void test() {
		log.info("boardRepository >> " + boardRepository);
	}
	
	@Test //전체 데이터 가져오는 테스트가 성공적으로 되는지 테스트 
	public void selectAlltest() {
		List<BoardVO> list = boardRepository.selectAllBoards(); //실행하면 전체데이터를 읽어옴 (BoardRepository에서)
		for(BoardVO vo : list)
			log.info(vo);
		
	}
	
	@Test //단 건 데이터 가져오는 테스트가 성공적으로 되는지 테스트 
	public void selectOneByNumTest() {
		BoardVO vo = boardRepository.selectOneByNum(1);
		log.info("vo >> " + vo);
		
	}
	
	@Test // 데이터 추가 
	public void insertBoardTest() {
		BoardVO vo = new BoardVO();
		
		vo.setName("홍길동");
		vo.setPass("1234");
		vo.setEmail("test@test.com");
		vo.setTitle("집에보내줘");
		vo.setContent("반가워");
		
		boardRepository.insertBoard(vo);
	}

}
